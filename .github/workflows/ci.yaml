name: CI

on:
  push:
  #   branches: [ main ]
  # pull_request:

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        # TODO: restore me
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # version: [11, 17]
        os: [ubuntu-latest]
        version: [17]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Checkout testsuite
        uses: actions/checkout@v4
        with:
          repository: WebAssembly/testsuite
          path: testsuite
          # The ref needs to stay in sync with the default value in test-gen-plugin
          ref: c2a67a575ddc815ff2212f68301d333e5e30a923
      - name: Checkout wasi-testsuite
        uses: actions/checkout@v4
        with:
          repository: WebAssembly/wasi-testsuite
          path: wasi-testsuite
          ref: prod/testsuite-base
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '${{ matrix.version }}'
          cache: maven
      - name: Check Style
        run:  mvn -B spotless:check -Pbenchmarks -Pfuzz
      - name: Test Java
        run: mvn -B clean install
      - name: Verify that nightly fuzz compiles
        run: mvn -B test -DskipTests -Pfuzz -pl fuzz

  readme-ci:
    runs-on: ubuntu-latest
    name: CI - Readme
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Checkout testsuite
        uses: actions/checkout@v4
        with:
          repository: WebAssembly/testsuite
          path: testsuite
          # The ref needs to stay in sync with the default value in test-gen-plugin
          ref: c2a67a575ddc815ff2212f68301d333e5e30a923
      - name: Checkout wasi-testsuite
        uses: actions/checkout@v4
        with:
          repository: WebAssembly/wasi-testsuite
          path: wasi-testsuite
          ref: prod/testsuite-base
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Build Chicory
        run: mvn clean install -DskipTests
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/repository"
      # Test root Readme
      - name: jbang
        uses: jbangdev/jbang-action@74844c9631cf1f35650427323e9bb3ffa41dfbd9 # tag=v0.115.0
        with:
          script: README.md
        env:
          JBANG_REPO: "${{ github.workspace }}/repository"
      - name: compare results
        run: diff -r ./readmes/main/expected ./readmes/main/current
      # Test wasi Readme
      - name: jbang
        uses: jbangdev/jbang-action@74844c9631cf1f35650427323e9bb3ffa41dfbd9 # tag=v0.115.0
        with:
          script: wasi/README.md
        env:
          JBANG_REPO: "${{ github.workspace }}/repository"
      - name: compare results
        run: diff -r ./readmes/wasi/expected ./readmes/wasi/current

  test-results:
    name: Test Results
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        folder: [runtime-tests, aot, wasi]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Checkout testsuite
        uses: actions/checkout@v4
        with:
          repository: WebAssembly/testsuite
          path: testsuite
          # The ref needs to stay in sync with the default value in test-gen-plugin
          ref: c2a67a575ddc815ff2212f68301d333e5e30a923
      - name: Checkout wasi-testsuite
        uses: actions/checkout@v4
        with:
          repository: WebAssembly/wasi-testsuite
          path: wasi-testsuite
          ref: prod/testsuite-base
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Test Java
        run: mvn -B clean install
      - name: Name
        id: name
        run: |
          case ${{ matrix.folder }} in
            runtime-tests)
              echo "NAME=interpreter" >> $GITHUB_ENV
              ;;
            aot)
              echo "NAME=aot" >> $GITHUB_ENV
              ;;
            wasi)
              echo "NAME=wasi" >> $GITHUB_ENV
              ;;
          esac
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ env.NAME }}
          path: './${{ matrix.folder }}/**/surefire-reports/*.xml'

  publish-test-results:
    name: "Publish Tests Results"
    needs: test-results
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: read
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"

      # - name: Badge name
      #   id: name
      #   run: |
      #     case ${{ matrix.folder }} in
      #       runtime-tests)
      #         echo "BADGE_NAME=interpreter" >> $GITHUB_ENV
      #         ;;
      #       aot)
      #         echo "BADGE_NAME=aot" >> $GITHUB_ENV
      #         ;;
      #       wasi)
      #         echo "BADGE_NAME=wasi" >> $GITHUB_ENV
      #         ;;
      #     esac
      # - name: Publish Test Results
      #   uses: EnricoMi/publish-unit-test-result-action@v2
      #   id: test-results
      #   if: always()
      #   with:
      #     check_name: '${{ env.BADGE_NAME }} Test Results'
      #     files: './${{ matrix.folder }}/**/surefire-reports/*.xml'
      # - name: Publish badge conditional
      #   id: publish
      #   # TODO: restore me
      #   # if: |
      #   #   (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
      #   #     github.event_name != 'workflow_run' && github.ref == 'refs/heads/main')
      #   run: echo "badge=true" >> $GITHUB_OUTPUT
      # - name: Set badge color
      #   shell: bash
      #   if: steps.publish.outputs.badge
      #   run: |
      #     case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
      #       success)
      #         echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
      #         ;;
      #       failure)
      #         echo "BADGE_COLOR=800000" >> $GITHUB_ENV
      #         ;;
      #       neutral)
      #         echo "BADGE_COLOR=696969" >> $GITHUB_ENV
      #         ;;
      #     esac
      # - name: Create badge
      #   uses: emibcn/badge-action@808173dd03e2f30c980d03ee49e181626088eee8
      #   if: steps.publish.outputs.badge
      #   with:
      #     label: 'Tests ${{ env.BADGE_NAME }}'
      #     status: '${{ fromJSON( steps.test-results.outputs.json ).stats.tests }} total, ${{ fromJSON( steps.test-results.outputs.json ).stats.tests_succ }} success, ${{ fromJSON( steps.test-results.outputs.json ).stats.tests_skip }} skip, ${{ fromJSON( steps.test-results.outputs.json ).stats.tests_fail }} failures, ${{ fromJSON( steps.test-results.outputs.json ).stats.tests_error }} errors'
      #     color: ${{ env.BADGE_COLOR }}
      #     path: badge-${{ env.BADGE_NAME }}.svg
      # - name: Upload badge to GH Action
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: badge-${{ env.BADGE_NAME }}
      #     path: badge-${{ env.BADGE_NAME }}.svg
      # TODO: restore me and fix links in Readme
      # - name: Upload badge to Gist
      #   if: steps.publish.outputs.badge
      #   uses: andymckay/append-gist-action@ab30bf28df67017c7ad696500b218558c7c04db3
      #   with:
      #     token: ${{ secrets.GIST_TOKEN }}
      #     gistURL: https://gist.githubusercontent.com/andreaTP/69354d1cc6cf23e4c3c4a9a8daf7ea15
      #     file: badge-${{ env.BADGE_NAME }}.svg
