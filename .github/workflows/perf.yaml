name: Perf

on:
  # TODO: fix me
  push:

jobs:
  perf:
    name: Run JMH tests
    steps:
      - name: Checkout sources for this branch
        uses: actions/checkout@v4
      - name: Checkout sources from main
        uses: actions/checkout@v4
        with:
          # TODO: switch to main after it get merged
          ref: initial-jmh
          path: main
      - name: Checkout testsuite
        uses: actions/checkout@v4
        with:
          repository: WebAssembly/testsuite
          path: testsuite
          # The ref needs to stay in sync with the default value in test-gen-plugin
          ref: c2a67a575ddc815ff2212f68301d333e5e30a923
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven
      - name: Build JMH jars
        run: ./scripts/build-jmh.sh
      - name: Build JMH jars on main
        working-directory: main
        run: ./scripts/build-jmh.sh
      - name: Run JMH
        run: ./scripts/run-jmh.sh
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: results
          path: jmh-result.json
      - name: Run JMH on main
        working-directory: main
        run: ./scripts/run-jmh.sh
      - uses: actions/upload-artifact@v4
        id: main-artifact-upload-step
        with:
          name: results
          path: main/jmh-result.json
      # Artifacts are uploaded as zip files... need to automate the generation of the JMH results
      - name: Produce a link to the visualization
        run: echo "http://jmh.morethan.io/?sources=${{ steps.main-artifact-upload-step.outputs.artifact-id }},${{ steps.main-artifact-upload-step.outputs.artifact-id }}
"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always() && matrix.os == 'ubuntu-latest' && matrix.version == '17'
        with:
          files: './**/surefire-reports/*.xml'
      - name: Publish badge conditional
        id: publish
        if: |
          (matrix.os == 'ubuntu-latest' && matrix.version == '17') &&
          (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
            github.event_name != 'workflow_run' && github.ref == 'refs/heads/main')
        run: echo "badge=true" >> $GITHUB_OUTPUT
      - name: Set badge color
        shell: bash
        if: steps.publish.outputs.badge
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac
      - name: Create badge
        uses: emibcn/badge-action@808173dd03e2f30c980d03ee49e181626088eee8
        if: steps.publish.outputs.badge
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg
      - name: Upload badge to Gist
        if: steps.publish.outputs.badge
        uses: andymckay/append-gist-action@6e8d64427fe47cbacf4ab6b890411f1d67c07f3e
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.githubusercontent.com/andreaTP/69354d1cc6cf23e4c3c4a9a8daf7ea15
          file: badge.svg
